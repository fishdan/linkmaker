name: release

on:
  push:
    tags:
      - 'v*'          # e.g. v0.1.0, v1.2.3
  workflow_dispatch:   # allow manual runs

permissions:
  contents: write

jobs:
  build:
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Derive tag + zip name
        run: |
          echo "TAG=${GITHUB_REF_NAME}" >> $GITHUB_ENV
          echo "ZIP_NAME=wikisearch-${GITHUB_REF_NAME}.zip" >> $GITHUB_ENV

      # Optional: sanity check the plugin header exists
      - name: Verify plugin header
        run: |
          test -f wikisearch.php
          grep -q "Plugin Name:.*WikiSearch" wikisearch.php

      - name: Ensure version matches tag
        run: |
          FILE_VERSION=$(grep -E "^\s*Version:\s*" wikisearch.php | head -1 | sed -E 's/^.*Version:\s*([0-9A-Za-z\.-]+).*/\1/')
          if [ -z "$FILE_VERSION" ]; then
            echo "::error ::Version header missing in wikisearch.php"
            exit 1
          fi
          EXPECTED="${TAG#v}"
          if [ "$FILE_VERSION" != "$EXPECTED" ]; then
            echo "::error ::Version in wikisearch.php ($FILE_VERSION) does not match tag ($TAG)"
            exit 1
          fi

      # Build a ZIP with FORWARD SLASHES using git archive.
      # This packages the WHOLE repo with a top-level 'wikisearch/' folder.
      # Ensure your plugin files live at repo root alongside wikisearch.php.
      - name: Build plugin ZIP (POSIX paths)
        run: |
          git archive --format=zip --output "$ZIP_NAME" --prefix=wikisearch/ "$GITHUB_SHA"

      - name: Copy stable zip alias
        run: cp "$ZIP_NAME" wikisearch.zip

      # If your plugin lives in a subfolder of a monorepo, use this instead:
      # - name: Build plugin ZIP from subfolder
      #   run: |
      #     git archive --format=zip --output "$ZIP_NAME" --prefix=wikisearch/ "$GITHUB_SHA":"plugins/wikisearch"

      # Publish the Release and upload the zip
      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG }}
          files: |
            ${{ env.ZIP_NAME }}
            wikisearch.zip
          generate_release_notes: true
